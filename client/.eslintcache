[{"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/index.js":"1","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/App.js":"2","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/reportWebVitals.js":"3","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/Explorer-component.jsx":"4","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Welcome/Welcome-component.jsx":"5","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/constants/index.js":"6","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/common/selectElementLanguage.jsx":"7","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebatesResults--component.jsx":"8","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/NewsResults--component.jsx":"9","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/utils/InputElement.jsx":"10","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/context/Debates/debateContext.js":"11","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/context/Debates/DebateState.js":"12","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/context/Debates/debateReducer.js":"13","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/context/types.js":"14","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/NotFound-component.jsx":"15","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/utils/Loading.jsx":"16","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/NotFound--component.jsx":"17","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/debateUtils/Collapsible--component.jsx":"18","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/debateUtils/FacetItem--component.jsx":"19","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/debateUtils/FacetChips--component.jsx":"20","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebateResults/FacetFilterContainer.jsx":"21","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebateResults/FacetLoading--component.jsx":"22","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebateResults/SearchInfo--component.jsx":"23","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebateResults/Calender-Debate--component.jsx":"24"},{"size":500,"mtime":1617443830203,"results":"25","hashOfConfig":"26"},{"size":982,"mtime":1617857281872,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1610868247050,"results":"28","hashOfConfig":"26"},{"size":11720,"mtime":1622965650938,"results":"29","hashOfConfig":"26"},{"size":8984,"mtime":1623000525133,"results":"30","hashOfConfig":"26"},{"size":13622,"mtime":1624092266119,"results":"31","hashOfConfig":"26"},{"size":639,"mtime":1617539167314,"results":"32","hashOfConfig":"26"},{"size":4979,"mtime":1623257238622,"results":"33","hashOfConfig":"26"},{"size":426,"mtime":1618469328113,"results":"34","hashOfConfig":"26"},{"size":701,"mtime":1617699258618,"results":"35","hashOfConfig":"26"},{"size":110,"mtime":1617623547152,"results":"36","hashOfConfig":"26"},{"size":7871,"mtime":1623777237207,"results":"37","hashOfConfig":"26"},{"size":1668,"mtime":1621236943883,"results":"38","hashOfConfig":"26"},{"size":1033,"mtime":1621943869992,"results":"39","hashOfConfig":"26"},{"size":400,"mtime":1617857419794,"results":"40","hashOfConfig":"26"},{"size":124,"mtime":1618215496173,"results":"41","hashOfConfig":"26"},{"size":144,"mtime":1618404623275,"results":"42","hashOfConfig":"26"},{"size":6977,"mtime":1622704092897,"results":"43","hashOfConfig":"26"},{"size":2726,"mtime":1623756590696,"results":"44","hashOfConfig":"26"},{"size":1563,"mtime":1623085605251,"results":"45","hashOfConfig":"26"},{"size":4886,"mtime":1624110022297,"results":"46","hashOfConfig":"26"},{"size":1056,"mtime":1623050910678,"results":"47","hashOfConfig":"26"},{"size":676,"mtime":1623147871458,"results":"48","hashOfConfig":"26"},{"size":5289,"mtime":1624106096787,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1s3ipy8",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/index.js",[],["110","111"],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/App.js",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/reportWebVitals.js",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/Explorer-component.jsx",["112","113","114","115","116","117"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { ReactTransliterate } from \"react-transliterate\";\nimport \"react-transliterate/dist/index.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useRouteMatch,\n  useHistory,\n} from \"react-router-dom\";\n\nimport SelectElement from \"../common/selectElementLanguage\";\n\n// Import Loading\nimport LoadingButton from \"../../utils/Loading\";\n\n// Import Debate Context\nimport DebateContext from \"../../context/Debates/debateContext\";\n\n// Import Constants\n\nimport {\n  CUSTOMER,\n  i18n,\n  renderCustomerName,\n  searchConstQueryObject,\n} from \"../../constants/index\";\n\n// Import Components\n\nimport DebateResults from \"./tabs/DebatesResults--component\";\nimport NewsResults from \"./tabs/NewsResults--component\";\nimport NotFound from \"./tabs/NotFound--component\";\n\nfunction Explorer(props) {\n  const debateContext = useContext(DebateContext);\n  const {\n    searchquery,\n    removeSearchQuery,\n    debatesearchResult,\n    removeSearchQueryResults,\n    searchRequestBackendProm,\n    searchRequestExplorerProm,\n    debateQueryObj,\n    addSearchQueryFormat,\n    loading,\n    addLoading,\n    removeLoading,\n  } = debateContext;\n  let { path, url } = useRouteMatch();\n\n  // Debug\n  const history = useHistory();\n\n  // console.info(`[DEBUG] Path is ${path}  url is ${url}`);\n\n  const [ln, setLn] = useState({\n    language: \"ENG\",\n  });\n\n  const [searchState, setSearch] = useState({\n    searchTerm: \"\",\n  });\n\n  const searchTermQuery = searchState.searchTerm;\n\n  // const [loading, setLoading] = useState(false);\n  // REF  https://dev.to/otamnitram/react-useeffect-cleanup-how-and-when-to-use-it-2hbm\n  useEffect(() => {\n    // Push to Welcome if the result state is zero\n    pushToWelcome();\n    // Sett Search Query to Local State\n    setSearch({ ...searchTerm, searchTerm: debateQueryObj[\"qp\"] });\n    addClassInputElement(CUSTOMER);\n    // Remove Query to Local State\n    removeSearchQuery();\n\n    // Add Event Listener to Enter Key Press\n    // keyBoardEnterPress();\n\n    return function cleanUp() {\n      removeSearchQueryResults();\n      addSearchQueryFormat(searchConstQueryObject);\n    };\n  }, []);\n\n  //\n  function pushToWelcome() {\n    var sizeObject = Object.keys(debatesearchResult).length;\n    if (sizeObject === 0) {\n      history.push(\"/\");\n    }\n  }\n\n  // Function detect Keyboard Enter\n  function keyBoardEnterPress() {\n    // Get the input field\n    var input = document.getElementsByTagName(\"input\")[0];\n\n    // Execute a function when the user releases a key on the keyboard\n    input.addEventListener(\"keyup\", function (event) {\n      // Number 13 is the \"Enter\" key on the keyboard\n      if (event.keyCode === 13) {\n        // Cancel the default action, if needed\n        event.preventDefault();\n        // Trigger the button element with a click\n        document.getElementById(\"searchButton\").click();\n      }\n    });\n  }\n\n  // Change the atribute of the element\n  function addClassInputElement(customer) {\n    // https://stackoverflow.com/questions/6856871/getting-the-parent-div-of-element\n    var element = document.getElementsByTagName(\"input\")[0];\n\n    element.classList.add(\n      customer === \"KLA\" ? \"searchInput-explorer\" : \"searchInput-explorer\"\n    );\n\n    var parentElement = element.parentNode;\n    parentElement.style.width = \"80%\";\n  }\n\n  // Change Language Function\n  function languageChangefunc(e) {\n    // console.info(e.target.value);\n    setLn({ language: e.target.value });\n  }\n\n  function changeSearchState(e) {\n    setSearch({ ...searchState, searchTerm: e.target.value });\n  }\n\n  // On Submit of Button\n  function onSubmitAction(e) {\n    e.preventDefault();\n    addLoading();\n    if (searchTermQuery.length === 0) {\n      toast.error(\"Please enter a Search Query .\");\n      removeLoading();\n      return;\n    }\n\n    let globalSearchQuery = debateQueryObj;\n    // Storing the query phrase\n    globalSearchQuery[\"qp\"] = searchState.searchTerm.trim();\n    addSearchQueryFormat(globalSearchQuery);\n    debateQueryObj &&\n      searchRequestExplorerProm(debateQueryObj)\n        .then((res) => {\n          // setLoading(false);\n          // setLn({ ...ln, loading: false });\n          removeLoading();\n          // history.push(\"/explorer/debates\");\n        })\n        .catch((error) => {\n          toast.error(\n            \"Connection to the Server Failed !!! Please Contact System Administrator\"\n          );\n          removeLoading();\n        });\n  }\n\n  const { language } = ln;\n\n  const { searchTerm } = searchState;\n  const { explorerHeaders } = i18n;\n\n  return (\n    <Router>\n      <div className=\"container-main-explorer\">\n        <div\n          className={\n            CUSTOMER === \"KLA\" ? \"gradient-ribbon--KLA\" : \"gradient-ribbon--KLC\"\n          }\n        ></div>\n\n        <header>\n          <div className=\"header-main\">\n            <div className=\"header--level1\">\n              <Link\n                to=\"/\"\n                className={\n                  CUSTOMER === \"KLA\" ? \"logo-name--kla\" : \"logo-name--klc\"\n                }\n              >\n                {renderCustomerName(CUSTOMER, language, i18n)}\n              </Link>\n\n              <div>\n                <form\n                  style={{\n                    display: \"flex\",\n                    width: \"100%\",\n                  }}\n                  action=\"\"\n                >\n                  <div\n                    className={\n                      CUSTOMER === \"KLA\"\n                        ? \"searchContainer-explorer--kla\"\n                        : \"searchContainer-explorer--klc\"\n                    }\n                  >\n                    {/* <div className=\"searchInputWrapper\"> */}\n                    <div\n                      className={\n                        CUSTOMER === \"KLA\" ? \"searchIcon\" : \"searchIcon\"\n                      }\n                    >\n                      <i class=\"fa fa-search\"></i>\n                    </div>\n\n                    <ReactTransliterate\n                      value={searchState.searchTerm}\n                      onChange={(e) =>\n                        setSearch({ searchTerm: e.target.value })\n                      }\n                      lang=\"kn\"\n                    />\n                  </div>\n                  {/* <input\n                    className={\n                      CUSTOMER === \"KLA\"\n                        ? \"searchInput-explorer\"\n                        : \"searchInput-explorer\"\n                    }\n                    placeholder={\n                      language === \"ENG\"\n                        ? i18n.searchPlaceHolder.eng\n                        : i18n.searchPlaceHolder.kan\n                    }\n                    value={searchState.searchTerm}\n                    onChange={changeSearchState}\n                  /> */}\n                  {/* </div> */}\n                  <button\n                    type=\"submit\"\n                    id=\"searchButton\"\n                    disabled={loading ? true : false}\n                    className={\n                      CUSTOMER === \"KLA\"\n                        ? \"searchSubmit-explorer--kla\"\n                        : \"searchSubmit-explorer--klc\"\n                    }\n                    onClick={onSubmitAction}\n                  >\n                    {loading ? <LoadingButton /> : <i class=\"fa fa-search\"></i>}\n                  </button>\n                </form>\n              </div>\n\n              <div\n                style={{\n                  marginLeft: \"1rem\",\n                  verticalAlign: \"middle\",\n                }}\n              >\n                <SelectElement\n                  customer={CUSTOMER}\n                  onClick={languageChangefunc}\n                  lang={language}\n                />\n              </div>\n            </div>\n            <div className=\"header--level2\">\n              <ul\n                className={\n                  CUSTOMER === \"KLA\"\n                    ? \"header-navigation--kla\"\n                    : \"header-navigation--klc\"\n                }\n              >\n                <li id=\"debatesTab\">\n                  <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n                  <Link to={`${url}/debates`}>\n                    {language === \"ENG\"\n                      ? explorerHeaders.debatesHeader.eng\n                      : explorerHeaders.debatesHeader.kan}\n                  </Link>\n                </li>\n                <li id=\"newsTab\">\n                  <i class=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i>\n                  <Link to={`${url}/news`}>\n                    {\" \"}\n                    {language === \"ENG\"\n                      ? explorerHeaders.newsHeader.eng\n                      : explorerHeaders.newsHeader.kan}\n                  </Link>\n                </li>\n                <li id=\"reviewTab\">\n                  <i class=\"fa fa-address-book-o\" aria-hidden=\"true\"></i>\n                  <Link to={`${url}/review`}>\n                    {\" \"}\n                    {language === \"ENG\"\n                      ? explorerHeaders.reviewHeader.eng\n                      : explorerHeaders.reviewHeader.kan}\n                  </Link>\n                </li>\n                <li id=\"budgetTab\">\n                  <i class=\"fa fa-inr\" aria-hidden=\"true\"></i>\n                  <Link to={`${url}/budget`}>\n                    {\" \"}\n                    {language === \"ENG\"\n                      ? explorerHeaders.budgetHeader.eng\n                      : explorerHeaders.budgetHeader.kan}\n                  </Link>\n                </li>\n                <li id=\"whowhoTab\">\n                  <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n\n                  <Link to={`${url}/whoswho`}>\n                    {\" \"}\n                    {language === \"ENG\"\n                      ? explorerHeaders.whoswhoHeader.eng\n                      : explorerHeaders.whoswhoHeader.kan}\n                  </Link>\n                </li>\n                <li id=\"vedioTab\">\n                  <i class=\"fa fa-video-camera\" aria-hidden=\"true\"></i>\n                  <Link to={`${url}/vedio`}>\n                    {\" \"}\n                    {language === \"ENG\"\n                      ? explorerHeaders.vedioHeader.eng\n                      : explorerHeaders.vedioHeader.kan}\n                  </Link>\n                </li>\n                <li>\n                  <Link to={`${url}/vedio`}>\n                    {\" \"}\n                    {language === \"ENG\"\n                      ? explorerHeaders.advancedSearch.eng\n                      : explorerHeaders.advancedSearch.kan}\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </header>\n        <section className=\"section-results-main\">\n          <Switch>\n            <Route exact path={path}>\n              <DebateResults />\n            </Route>\n\n            <Route\n              exact\n              path={`${path}/debates`}\n              component={() => (\n                <DebateResults lang={language} searchTerm={searchTermQuery} />\n              )}\n            />\n            <Route exact path={`${path}/news`} component={NewsResults} />\n            <Route component={NotFound} />\n          </Switch>\n          <ToastContainer\n            position=\"bottom-left\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </section>\n\n        <footer>\n          <h6>This is footer</h6>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default Explorer;\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Welcome/Welcome-component.jsx",["118","119","120","121","122","123","124","125"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ReactTransliterate } from \"react-transliterate\";\nimport \"react-transliterate/dist/index.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// Import Contexts\nimport DebateContext from \"../../context/Debates/debateContext\";\n\n// Import Constants\n\nimport {\n  CUSTOMER,\n  i18n,\n  renderCustomerName,\n  searchConstQueryObject,\n} from \"../../constants/index\";\n\n// Import Components\n\nimport SelectElement from \"../common/selectElementLanguage\";\n\nimport InputElement from \"../../utils/InputElement\";\n\n// Import Images\n\nimport SpeakerImage from \"../../images/speaker-cropped.jpg\";\nimport ChairmanImage from \"../../images/chairman.jpeg\";\n\nimport SecretaryKLA from \"../../images/secretary-kla.jpg\";\nimport SecretaryKLC from \"../../images/secretary-klc.jpg\";\n\nconst WelcomeScreen = (props) => {\n  const debateContext = useContext(DebateContext);\n\n  const {\n    addSearchQuery,\n    removeSearchQuery,\n    searchQuery,\n    debatesearchResult,\n    searchRequestBackend,\n    searchRequestBackendProm,\n    addSearchQueryFormat,\n    removeSearchQueryFormat,\n    debateQueryObj,\n  } = debateContext;\n\n  const history = useHistory();\n\n  // function to push to explorer page if results exists in the state\n\n  useEffect(() => {\n    addClassInputElement(CUSTOMER);\n\n    // On Load Push to Explorer If Result Exist\n    // pushToExplorer();\n\n    // Clear Global State\n    removeSearchQuery();\n\n    addSearchQueryFormat(searchConstQueryObject);\n  }, []);\n\n  // Local State\n  const [ln, setLn] = useState({\n    language: \"ENG\",\n    loading: false,\n  });\n  // Local Loading State\n  // const [loading, setLoading] = useState(false);\n\n  const [query, setQuery] = useState(\"\");\n\n  function addClassInputElement(customer) {\n    // https://stackoverflow.com/questions/6856871/getting-the-parent-div-of-element\n    var element = document.getElementsByTagName(\"input\")[0];\n\n    element.classList.add(\n      customer === \"KLA\" ? \"searchInput--kla\" : \"searchInput--klc\"\n    );\n\n    var parentElement = element.parentNode;\n    parentElement.style.width = \"80%\";\n  }\n\n  function onChangeQuery(e) {\n    setQuery(e.target.value);\n  }\n\n  // Handle Search Submit\n\n  function handleSearchSubmit(e) {\n    e.preventDefault();\n    if (query.length === 0) {\n      toast.error(\"Please enter a search Query .\");\n      return;\n    }\n    // Setting Loading True\n    // setLoading(true);\n    setLn({ ...ln, loading: true });\n    // Pass the query to the gobal state\n    let queryObject = addSearchQuery(query.trim(), debateQueryObj);\n    // alert(\"you have searched for - \" + query);\n\n    searchRequestBackendProm(queryObject)\n      .then((res) => {\n        // setLoading(false);\n        setLn({ ...ln, loading: false });\n        history.push(\"/explorer/debates\");\n      })\n      .catch((error) => {\n        toast.error(\n          \"Connection to the Server Failed !!! Please Contact System Administrator\"\n        );\n        setLn({ ...ln, loading: false });\n      });\n\n    // history.push(\"/explorer\");\n  }\n\n  // // Handle Keyboard Submit\n\n  // function keyboardSubmit(e) {\n  //   //it triggers by pressing the enter key\n  //   if (e.keyCode === 13) {\n  //     handleSearchSubmit();\n  //     // this.btn.click();\n  //   }\n  // }\n\n  function renderSpeaker(customer, lang, varObject, type) {\n    // This function will render the secretary s Name & Designation\n    if (customer === \"KLA\") {\n      if (type === \"name\") {\n        const speakerName =\n          lang === \"ENG\"\n            ? varObject.speakerName_KLA.eng\n            : varObject.speakerName_KLA.kan;\n        return speakerName;\n      } else {\n        const speakerDesigination =\n          lang === \"ENG\"\n            ? varObject.speaker_KLA.eng\n            : varObject.speaker_KLA.kan;\n\n        return speakerDesigination;\n      }\n    } else {\n      if (type === \"name\") {\n        const secretaryName =\n          lang === \"ENG\"\n            ? varObject.chairmanName_KLC.eng\n            : varObject.chairmanName_KLC.kan;\n        return secretaryName;\n      } else {\n        const chairmanDesigination =\n          lang === \"ENG\"\n            ? varObject.chairman_KLC.eng\n            : varObject.chairman_KLC.kan;\n\n        return chairmanDesigination;\n      }\n    }\n  }\n\n  function renderSecretary(customer, lang, varObject, type) {\n    // This function will render the secretary s Name & Designation\n    if (customer === \"KLA\") {\n      if (type === \"name\") {\n        const secretaryName =\n          lang === \"ENG\"\n            ? varObject.secretaryName_KLA.eng\n            : varObject.secretaryName_KLA.kan;\n        return secretaryName;\n      } else {\n        const secretaryDesigination =\n          lang === \"ENG\"\n            ? varObject.secretary_KLA.eng\n            : varObject.secretary_KLA.kan;\n\n        return secretaryDesigination;\n      }\n    } else {\n      if (type === \"name\") {\n        const secretaryName =\n          lang === \"ENG\"\n            ? varObject.secretaryName_KLC.eng\n            : varObject.secretaryName_KLC.kan;\n        return secretaryName;\n      } else {\n        const secretaryDesigination =\n          lang === \"ENG\"\n            ? varObject.secretary_KLC.eng\n            : varObject.secretary_KLC.kan;\n\n        return secretaryDesigination;\n      }\n    }\n  }\n\n  function languageChangefunc(e) {\n    console.info(e.target.value);\n    setLn({ ...ln, language: e.target.value });\n  }\n\n  const { language } = ln;\n  return (\n    <section>\n      {/* <div className=\"circle\" /> */}\n\n      <header>\n        <div\n          className={CUSTOMER === \"KLA\" ? \"logo-name--kla\" : \"logo-name--klc\"}\n        >\n          {renderCustomerName(CUSTOMER, language, i18n)}\n        </div>\n        <div>\n          <SelectElement customer={CUSTOMER} onClick={languageChangefunc} />\n        </div>\n      </header>\n      <div className=\"container-main\">\n        <div className=\"searchArea\">\n          <form action=\"\">\n            <div className=\"searchInputWrapper\">\n              {/* <input\n              className={\n                CUSTOMER === \"KLA\" ? \"searchInput--kla\" : \"searchInput--klc\"\n              }\n              placeholder={\n                language === \"ENG\"\n                  ? i18n.searchPlaceHolder.eng\n                  : i18n.searchPlaceHolder.kan\n              }\n              onChange={onChangeQuery}\n              id=\"transliteration\"\n            /> */}\n              <ReactTransliterate\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                lang=\"kn\"\n              />\n              {/* <InputElement language={language} onChangeQuery={onChangeQuery} /> */}\n              <button\n                type=\"submit\"\n                disabled={ln.loading ? true : false}\n                className={\n                  CUSTOMER === \"KLA\" ? \"searchSubmit--kla\" : \"searchSubmit--klc\"\n                }\n                onClick={handleSearchSubmit}\n              >\n                {ln.loading ? (\n                  <i\n                    class=\"fa fa-spinner fa-2x animateLoader\"\n                    aria-hidden=\"true\"\n                  ></i>\n                ) : (\n                  <i class=\"fa fa-search\"></i>\n                )}\n                {/* <i class=\"fa fa-search\"></i> */}\n              </button>\n            </div>\n          </form>\n        </div>\n        <div className=\"imgContainer\">\n          <div className=\"keypersonImgContainer\">\n            <div className=\"imgBx\">\n              <img\n                id=\"speaker\"\n                src={CUSTOMER === \"KLA\" ? SpeakerImage : ChairmanImage}\n                alt=\"SpeakerImage\"\n              />\n            </div>\n            <div className=\"intro\">\n              <h4 className=\"name\">\n                {renderSpeaker(CUSTOMER, language, i18n, \"name\")}\n              </h4>\n              <h5 className=\"designation\">\n                {renderSpeaker(CUSTOMER, language, i18n, \"desg\")}\n              </h5>\n            </div>\n          </div>\n\n          <div className=\"keypersonImgContainer\">\n            <div className=\"imgBx\">\n              <img\n                id=\"secretary\"\n                src={CUSTOMER === \"KLA\" ? SecretaryKLA : SecretaryKLC}\n                alt=\"Secretary \"\n              />\n            </div>\n            <div className=\"intro\">\n              <h4 className=\"name\">\n                {renderSecretary(CUSTOMER, language, i18n, \"name\")}\n              </h4>\n              <h5 className=\"designation\">\n                {renderSecretary(CUSTOMER, language, i18n, \"desg\")}\n              </h5>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer\n        position=\"bottom-left\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </section>\n  );\n};\n\nexport default WelcomeScreen;\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/constants/index.js",["126","127","128"],"import axios from \"axios\";\n\n// GLOBAL CONSTANTS\nexport const CUSTOMER = \"KLA\";\n\nexport const i18n = {\n  customerName_KLA: {\n    eng: \"Karnataka Legislative Assembly\",\n    kan: \"ಕರ್ನಾಟಕ ವಿಧಾನಸಭೆ\",\n  },\n\n  customerName_KLC: {\n    eng: \"Karnataka Legislative Council\",\n    kan: \"ಕರ್ನಾಟಕ ವಿಧಾನ ಪರಿಷತ್ತು\",\n  },\n\n  speakerName_KLA: {\n    eng: \"Shri Vishweshwar Hegde Kageri\",\n    kan: \"ಶ್ರೀ ವಿಶ್ವೇಶ್ವರ ಹೆಗಡೆ ಕಾಗೇರಿ\",\n    photo_location: \"\",\n  },\n\n  speaker_KLA: {\n    eng: \"Hon'ble Speaker\",\n    kan: \"ಗೌರವಾನ್ವಿತ ಸ್ಪೀಕರ್\",\n  },\n\n  chairmanName_KLC: {\n    eng: \"Shri Basavaraja Horatti\",\n    kan: \"ಶ್ರೀ ಬಸವರಾಜ ಶಿವಲಿಂಗಪ್ಪ ಹೊರಟ್ಟಿ\",\n    photo_location: \"\",\n  },\n\n  chairman_KLC: {\n    eng: \"Hon'ble Chairman\",\n    kan: \"ಗೌರವಾನ್ವಿತ ಸಭಾಪತಿ\",\n  },\n\n  secretaryName_KLA: {\n    eng: \"Smt M.K. VISHALAKSHI\",\n    kan: \"ಶ್ರೀಮತಿ ಎಂ.ಕೆ. ವಿಶಾಲಕ್ಷಿ\",\n    photo_location: \"\",\n  },\n\n  secretary_KLA: {\n    eng: \"Secretary (I/C)\",\n    kan: \"ಕಾರ್ಯದರ್ಶಿ (ಕಾ /ಭಾ )\",\n  },\n\n  secretaryName_KLC: {\n    eng: \"Smt K R Mahalakshmi\",\n    kan: \"ಶ್ರೀಮತಿ ಕೆ ಆರ್ ಮಹಾಲಕ್ಷ್ಮಿ\",\n    photo_location: \"\",\n  },\n\n  secretary_KLC: {\n    eng: \"Secretary\",\n    kan: \"ಕಾರ್ಯದರ್ಶಿ\",\n  },\n\n  // Explorer Constants\n\n  debateType: {\n    eng: \"Debate Type\",\n    kan: \"ಚರ್ಚೆಯ ವಿಧಾ \",\n  },\n  year: {\n    eng: \"Year\",\n    kan: \"ವರ್ಷ\",\n  },\n  bookId: {\n    eng: \"Book Id\",\n    kan: \"ಪುಸ್ತಕ ಸಂಖ್ಯೆ\",\n  },\n\n  assemblyNumber: {\n    eng: \"Assembly Number\",\n    kan: \"ವಿಧಾನ ಸಭೆಯ ಸಂಖ್ಯೆ\",\n  },\n\n  sessionNumber: {\n    eng: \"Session Number\",\n    kan: \"ಅಧಿವೇಶನ ಸಂಖ್ಯೆ\",\n  },\n\n  debateTitle: {\n    eng: \"Debate Title\",\n    kan: \"ಚರ್ಚೆಯ ಶೀರ್ಷಿಕೆ\",\n  },\n\n  debateParticipants: {\n    eng: \"Debate Participants\",\n    kan: \"ಚರ್ಚೆಯಲ್ಲಿ ಭಾಗವಹಿಸಿದ ಸದಸ್ಯರು/ಸಚಿವರು\",\n  },\n\n  bookId: {\n    eng: \"Book Id\",\n    kan: \"ನಡವಳಿ ಪುಸ್ತಕ ಸಂಖ್ಯೆ\",\n  },\n\n  issues: {\n    eng: \"Issues\",\n    kan: \"ಸಮಸ್ಯೆಗಳು\",\n  },\n\n  annexure: {\n    eng: \"Annexure\",\n    kan: \"ಅನುಬಂಧಗಳು\",\n  },\n\n  searchPlaceHolder: {\n    eng: \"Click to search in Debates\",\n    kan: \"ಚರ್ಚೆಗಳಲ್ಲಿ ಹುಡುಕಲು ಕ್ಲಿಕ್ ಮಾಡಿ\",\n  },\n\n  explorerHeaders: {\n    debatesHeader: {\n      eng: \"Debates\",\n      kan: \"ಚರ್ಚೆಗಳು\",\n    },\n    newsHeader: {\n      eng: \"News\",\n      kan: \"ಸುದ್ದಿ\",\n    },\n    reviewHeader: {\n      eng: \"Review\",\n      kan: \"ಪುನರ್ ವಲೋಕನ\",\n    },\n    budgetHeader: {\n      eng: \"Budget\",\n      kan: \"ಆಯವ್ಯಯ ಪತ್ರ\",\n    },\n    whoswhoHeader: {\n      eng: \"Who's Who\",\n      kan: \"ಸದ್ಯಸರ ಪರಿಚಯ\",\n    },\n    vedioHeader: {\n      eng: \"Vedios\",\n      kan: \"ವೀಡಿಯೊಗಳು\",\n    },\n    advancedSearch: {\n      eng: \"Advanced Search\",\n      kan: \"ಸಾಧನಗಳು\",\n    },\n  },\n};\n// Global Constants of the Request Headers\nexport const urlHeaders = {\n  requestHeadersKLA: {\n    searchQuery: \"http://localhost:9201/api/sd/sh\",\n    suggestQuery: \"http://localhost:9201/api/sd/0\",\n  },\n  requestHeadersKLC: {\n    searchQuery: \"http://localhost:9101/api/sd/sh\",\n    suggestQuery: \"http://localhost:9101/api/sd/0\",\n  },\n\n  requestpublicDir: {\n    requestURlLink: [\n      \"https://spin.atomicobject.com/2015/10/03/remote-pfs-node-js-express/\",\n      \"https://gist.github.com/adamgibbons/af2de54c011e68a7b85a\",\n    ],\n    serverPublicFilesKLA: \"\",\n    serverPublicFilesKLC: \"\",\n  },\n};\n\n// Search Request  Constants\nexport const searchQueryConst = {\n  srt: \"\",\n  qt: \"PRC\",\n  qp: \"\",\n  dtf: \"\",\n  anf: \"\",\n  snf: \"\",\n  dsubfEng: \"\",\n  dsubfKan: \"\",\n  dpfEng: \"\",\n  dpfKan: \"\",\n  dbf: \"\",\n  ytf: \"\",\n  sectionDateFrm: \"\",\n  sectionDateTo: \"\",\n  issfEng: \"\",\n  issfKan: \"\",\n  tagfKan: \"\",\n  tagfEng: \"\",\n};\n\n// Function to convert array keys which has arrays  to string\nexport function arrayToString(obj) {\n  let replicaObj = {\n    ...obj,\n  };\n  for (const i in replicaObj) {\n    if (replicaObj[i] instanceof Array) {\n      replicaObj[i] = replicaObj[i].toString();\n    }\n  }\n\n  return replicaObj;\n}\n\n// Search Request Constants Exmaple\nexport const searchObject = {\n  ln: \"kn\",\n  srt: \"\",\n  qt: \"PRC\",\n  qp: \"world bank\",\n  dtf: \"part1,part2\",\n  anf: \"13[2005-2008]\",\n  snf: \"13[2007]\",\n  dsubfEng: \"zero hour,rule 69\",\n  dsubfKan: \"\",\n  dpfEng: \"\",\n  dpfKan: \"\",\n  dbf: \"24\",\n  ytf: \"2000,2001\",\n  sectionDateFrm: \"2000-01-01\",\n  sectionDateTo: \"1999-01-01\",\n  issfEng: \"cauvery,river\",\n  issfKan: \"\",\n  tagfKan: \"krishna,water\",\n  tagfEng: \"\",\n};\n\n// Elasticsearch Contansts\nexport const elasticSearchConst = {\n  userName: \"elastic\",\n  password: \"7pD3s7WlEBZXCr5F3oKdGn2S\",\n  webAddr:\n    \"enterprise-search-deployment-2bf868.es.us-west1.gcp.cloud.es.io:9243\",\n  local: \"\",\n  collection_test_kla: \"klatest\",\n  collection_test_klc: \"klctest\",\n  collection_prod_kla: \"klaprod\",\n  collection_prod_klc: \"klcprod\",\n};\n\n// Search Query Request Constants Exmaple\nexport const searchConstQueryObject = {\n  ln: \"\",\n  srt: \"\",\n  qt: \"PRC\",\n  qp: \"\",\n  dtf: [],\n  anf: \"\",\n  snf: \"\",\n  dsubfEng: [],\n  dsubfKan: [],\n  dpfEng: [],\n  dpfKan: [],\n  dbf: \"\",\n  ytf: [],\n  sectionDateFrm: \"\",\n  sectionDateTo: \"\",\n  //bookId: [],\n  issfEng: [],\n  issfKan: [],\n  tagfKan: [],\n  tagfEng: [],\n};\n\n// Filter Mapping to Tag Name\nexport function filterMappingObject(lang, itemType) {\n  const queryObj = {\n    dtf: \"ENG\" ? \"Debate Type\" : \"ಚರ್ಚೆಯ ವಿಧಾ\",\n    anf: \"ENG\" ? \"Assembly Number\" : \"ವಿಧಾನ ಸಭೆಯ ಸಂಖ್ಯೆ\",\n    snf: \"ENG\" ? \"Session Number\" : \"ಅಧಿವೇಶನ ಸಂಖ್ಯೆ\",\n    dsubfEng: \"Debate Title\",\n    dsubfKan: \"ಚರ್ಚೆಯ ಶೀರ್ಷಿಕೆ\",\n    dpfEng: \"Debate Participants\",\n    dpfKan: \"ಚರ್ಚೆಯಲ್ಲಿ ಭಾಗವಹಿಸಿದ ಸದಸ್ಯರು/ಸಚಿವರು\",\n    dbf: lang === \"ENG\" ? \"Book Id\" : \"ಪುಸ್ತಕ ಸಂಖ್ಯೆ\",\n    ytf: lang === \"ENG\" ? \"Year\" : \"ವರ್ಷ\",\n    sectionDateFrm: \"ENG\" ? \"Date\" : \"ದಿನಾಂಕ \",\n    sectionDateTo: \"ENG\" ? \"Date\" : \"ಪುಸ್ತಕ ಸಂಖ್ಯೆ\",\n    bookId: lang === \"ENG\" ? \"Book Id\" : \"ಪುಸ್ತಕ ಸಂಖ್ಯೆ\",\n    issfEng: \"Issues\",\n    issfKan: \"ಸಮಸ್ಯೆಗಳು\",\n    tagfKan: \"Tags\",\n    tagfEng: \"Tags\",\n  };\n  return queryObj[itemType];\n}\n\n// Date Formats\n\nexport function dateFormat(dateString) {\n  const dateSplit = dateString.split(\"-\");\n  // Changing the date to dd/MM/yyyy\n  const newDate = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n  return newDate;\n}\n\n// Filter Mapping to Tag Name\nexport function filterMappingObjectForKey(lang, itemValue) {\n  const queryObj = {\n    dtf: \"ENG\" ? \"Debate Type\" : \"ಚರ್ಚೆಯ ವಿಧಾ\",\n    anf: \"ENG\" ? \"Assembly Number\" : \"ವಿಧಾನ ಸಭೆಯ ಸಂಖ್ಯೆ\",\n    snf: \"ENG\" ? \"Session Number\" : \"ಅಧಿವೇಶನ ಸಂಖ್ಯೆ\",\n    dsubfEng: \"Debate Title\",\n    dsubfKan: \"ಚರ್ಚೆಯ ಶೀರ್ಷಿಕೆ\",\n    dpfEng: \"Debate Participants\",\n    dpfKan: \"ಚರ್ಚೆಯಲ್ಲಿ ಭಾಗವಹಿಸಿದ ಸದಸ್ಯರು/ಸಚಿವರು\",\n    dbf: lang === \"ENG\" ? \"Book Id\" : \"ಪುಸ್ತಕ ಸಂಖ್ಯೆ\",\n    ytf: lang === \"ENG\" ? \"Year\" : \"ವರ್ಷ\",\n    sectionDateFrm: \"Date-From\",\n    sectionDateTo: \"Date-To\",\n    bookId: lang === \"ENG\" ? \"Book Id\" : \"ಪುಸ್ತಕ ಸಂಖ್ಯೆ\",\n    issfEng: \"Issues\",\n    issfKan: \"ಸಮಸ್ಯೆಗಳು\",\n    tagfKan: \"Tags\",\n    tagfEng: \"Tags\",\n  };\n\n  for (let key in queryObj) {\n    if (queryObj[key] === itemValue) {\n      return key;\n    }\n  }\n}\n\n// Helper Functions\nexport function renderCustomerName(customer, lang, varObject) {\n  // This function will conditional render the Logo Name based on customer\n  if (customer === \"KLA\") {\n    const logoName =\n      lang === \"ENG\"\n        ? varObject.customerName_KLA.eng\n        : varObject.customerName_KLA.kan;\n\n    return logoName;\n  } else {\n    const logoName =\n      lang === \"ENG\"\n        ? varObject.customerName_KLC.eng\n        : varObject.customerName_KLC.kan;\n\n    return logoName;\n  }\n}\n\nexport function returnQueryVariableFilter(debatetype) {\n  const mappingField = {\n    debateType: [\"dtf\", \"array\"],\n    assemblyNumber: [\"anf\", \"string\"],\n    sessionNumber: [\"snf\", \"string\"],\n    debateTitle: [\"dsubfEng\", \"array\", \"dsubfKan\"],\n    debatePart: [\"dpfEng\", \"array\", \"dpfKan\"],\n    year: [\"ytf\", \"array\"],\n    dateFrom: [\"sectionDateFrm\", \"string\"],\n    dateTo: [\"sectionDateTo\", \"string\"],\n    bookId: [\"dbf\", \"string\"],\n    issue: [\"issfEng\", \"array\", \"issfKan\"],\n  };\n  return mappingField[debatetype];\n}\n\n// Export return the query object after manipulating it\n\nexport function returnObjQuery(eventObj, lang, arrayObject, queryObject) {\n  let queryParameter = queryObject;\n\n  var parameterVariable;\n\n  if (arrayObject.length === 2) {\n    parameterVariable = [arrayObject[0]];\n  } else {\n    parameterVariable = lang === \"ENG\" ? arrayObject[0] : arrayObject[2];\n  }\n\n  // let queryObject = {...queryParameter,parameterVariable:eventObj.target.value}\n  // console.info(\n  //   `[DEBUG] The value of the paramerter variable is ${parameterVariable}`\n  // );\n  if (arrayObject[1] === \"string\") {\n    // Checking if the string value is checked or not\n    if (eventObj.target.checked) {\n      // let queryObject = {\n      //   ...queryParameter,\n      //   parameterVariable: eventObj.target.value,\n      // };\n      queryObject[parameterVariable] = eventObj.target.value;\n      return queryObject;\n    } else {\n      // let queryObject = {\n      //   ...queryParameter,\n      //   parameterVariable: eventObj.target.value,\n      // };\n      queryObject[parameterVariable] = \"\";\n      return queryObject;\n    }\n    //  let queryParameter = (eventObj.target.checked) ? {...queryParameter,parameterVariable:eventObj.target.value}:{...queryParameter,queryParameter[arrayObject[0]]:\"\"}\n    //  return queryParameter\n  } else {\n    // Checking if the array value is checked or not\n    if (eventObj.target.checked) {\n      // let queryObject = {\n      //   ...queryParameter,\n      //   parameterVariable: [...parameterVariable, eventObj.target.value],\n      // };\n      // queryObject[parameterVariable] = queryObject[parameterVariable].push(\n      //   eventObj.target.value\n      // );\n      queryObject[parameterVariable] = [\n        ...queryObject[parameterVariable],\n        eventObj.target.value,\n      ];\n      return queryObject;\n    } else {\n      let arrayVar = queryObject[parameterVariable];\n      arrayVar = arrayVar.filter(function (item) {\n        return item !== eventObj.target.value;\n      });\n\n      // let queryObject = {\n      //   ...queryParameter,\n      //   parameterVariable: arrayVar,\n      // };\n      queryObject[parameterVariable] = arrayVar;\n      return queryObject;\n    }\n  }\n}\n// return Date Query Obj\nexport function returnDateObjQuery(arrayName, queryObject, startdate, enddate) {\n  let queryParameter = queryObject;\n\n  queryParameter[arrayName[0]] = startdate;\n  queryParameter[arrayName[1]] = enddate;\n\n  return queryParameter;\n}\n\nexport function returnObjRemoveQuery(eventKey, queryObject, value) {\n  // This function is to remove the Query Key if its array or string\n\n  let query = queryObject;\n\n  if (query[eventKey] instanceof Array) {\n    let filteredAry = query[eventKey].filter(function (item) {\n      return item !== value;\n    });\n    query[eventKey] = filteredAry;\n    return query;\n  } else {\n    query[eventKey] = \"\";\n    return query;\n  }\n}\n\n// Add the Highlight To Tab\nexport function addHiglightToTab(tabType) {\n  function nodeType(type) {\n    if (type === \"debate\") {\n      return \"debatesTab\";\n    } else if (type === \"news\") {\n      return \"newsTab\";\n    } else if (type === \"review\") {\n      return \"reviewTab\";\n    } else if (type === \"budget\") {\n      return \"budgetTab\";\n    } else if (\"vedio\") {\n      return \"vedioTab\";\n    } else if (type === \"whoswho\") {\n      return \"whowhotab\";\n    }\n  }\n  const node = document.getElementById(nodeType(tabType));\n  if (node === null) {\n    return;\n  }\n\n  node.classList.toggle(\n    CUSTOMER === \"KLA\" ? \"active_tab--kla\" : \"active_tab--klc\"\n  );\n}\n\n// Filter Keys in Object\n\nexport function filterRemoveKeysObject(queryObj, filterArray) {\n  // This function filters the keys names present in the keys array\n\n  const filteredObj = Object.keys(queryObj)\n    .filter((key) => !filterArray.includes(key))\n    .reduce((obj, key) => {\n      obj[key] = queryObj[key];\n      return obj;\n    }, {});\n\n  return filteredObj;\n}\n\n// Cancel Token\n\n// export function cancelToken() {\n//   useEffect(() => {\n//     let cancel;\n\n//     axios({\n//       method: \"GET\",\n//       url: \"http://openlibrary.org/search.json\",\n//       params: { q: query, page: pageNumber },\n//       cancelToken: new axios.CancelToken((c) => (cancel = c)),\n//     })\n//       .then((res) => {\n//         console.log(res.data);\n//       })\n//       .catch((e) => {\n//         if (axios.isCancel(e)) return;\n//       });\n\n//     return () => {\n//       cancel();\n//     };\n//   }, [input]);\n\n//   return null;\n// }\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/common/selectElementLanguage.jsx",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebatesResults--component.jsx",["129","130","131"],"import React, { useEffect, Fragment, useState, useContext } from \"react\";\nimport CollapsibleCard from \"./debateUtils/Collapsible--component\";\nimport FacetFilterContainer from \"./DebateResults/FacetFilterContainer\";\nimport SearchInfo from \"./DebateResults/SearchInfo--component\";\nimport CalenderDebate from \"./DebateResults/Calender-Debate--component\";\nimport {\n  CUSTOMER,\n  addHiglightToTab,\n  i18n,\n  searchQueryConst,\n} from \"../../../constants/index\";\n\n// Import Context\nimport DebateContext from \"../../../context/Debates/debateContext\";\nimport FacetLoading from \"./DebateResults/FacetLoading--component\";\nfunction DebatesResults({ lang, searchTerm }) {\n  const tabType = \"debate\";\n  const debateContext = useContext(DebateContext);\n  const [searchState, setSearch] = useState(searchQueryConst);\n\n  const { debatesearchResult, loading } = debateContext;\n\n  useEffect(() => {\n    addHiglightToTab(tabType);\n    // setSearch(...searchState, (searchState[\"qp\"] = searchTerm));\n    // console.info(\n    //   `[DEBUG] the value of search State is ${JSON.stringify(searchState)} `\n    // );\n    return function cleanup() {\n      //removeHiglightToTab();\n      addHiglightToTab(tabType);\n    };\n  }, []);\n\n  useEffect(() => {}, [debatesearchResult]);\n  // useEffect(() => {\n  //   setSearch((searchState.qp = searchTerm));\n  // }, [searchTerm]);\n\n  const { analysis } = debatesearchResult;\n\n  // console.info(\n  //   `[DEBUG] from the Debate Results compoent ${JSON.stringify(searchState)}`\n  // );\n\n  return (\n    <>\n      <div className=\"debate-result--container\">\n        <div className=\"debate-result-facet--container\">\n          {analysis && (\n            <CollapsibleCard\n              type=\"debateType\"\n              lang={lang}\n              header={i18n.debateType}\n              dataFacetEng={analysis ? analysis.debateType_bucket.buckets : []}\n              dataFacetKan={analysis ? analysis.debateType_bucket.buckets : []}\n            />\n          )}\n\n          <CollapsibleCard\n            type=\"assemblyNumber\"\n            lang={lang}\n            header={i18n.assemblyNumber}\n            dataFacetEng={\n              analysis ? analysis.assemblyNumber_bucket.buckets : []\n            }\n            dataFacetKan={\n              analysis ? analysis.assemblyNumber_bucket.buckets : []\n            }\n          />\n          <CollapsibleCard\n            type=\"sessionNumber\"\n            lang={lang}\n            header={i18n.sessionNumber}\n            dataFacetEng={analysis ? analysis.sessionNumber_bucket.buckets : []}\n            dataFacetKan={analysis ? analysis.sessionNumber_bucket.buckets : []}\n          />\n          <CollapsibleCard\n            type=\"debateTitle\"\n            lang={lang}\n            header={i18n.debateTitle}\n            dataFacetEng={\n              analysis ? analysis.debateTitleEng_bucket.buckets : []\n            }\n            dataFacetKan={\n              analysis ? analysis.debateTitleKan_bucket.buckets : []\n            }\n          />\n          <CollapsibleCard\n            type=\"debatePart\"\n            lang={lang}\n            header={i18n.debateParticipants}\n            dataFacetEng={\n              analysis ? analysis.debateParticiapantsEng_bucket.buckets : []\n            }\n            dataFacetKan={\n              analysis ? analysis.debateParticiapantsKan_bucket.buckets : []\n            }\n          />\n          <CollapsibleCard\n            type=\"year\"\n            lang={lang}\n            header={i18n.year}\n            dataFacetEng={analysis ? analysis.yearFilter_bucket.buckets : []}\n            dataFacetKan={analysis ? analysis.yearFilter_bucket.buckets : []}\n          />\n          <CollapsibleCard\n            type=\"issue\"\n            lang={lang}\n            header={i18n.issues}\n            dataFacetEng={\n              analysis ? analysis.issuesSection_eng_bucket.buckets : []\n            }\n            dataFacetKan={\n              analysis ? analysis.issuesSection_kan_bucket.buckets : []\n            }\n          />\n          <CollapsibleCard\n            type=\"bookId\"\n            lang={lang}\n            header={i18n.bookId}\n            dataFacetEng={analysis ? analysis.bookId_bucket.buckets : []}\n            dataFacetKan={analysis ? analysis.bookId_bucket.buckets : []}\n          />\n        </div>\n        <div className=\"debate-result-resultPage--container\">\n          <div className=\"debate-result-filterView--container\">\n            <FacetFilterContainer lang={lang} />\n            <div className=\"filterInfoContainer\">\n              <div className=\"loadingResultsInfo\">\n                {loading ? <FacetLoading lang={lang} /> : <SearchInfo />}\n              </div>\n              <div className=\"dateSelector\">\n                <CalenderDebate />\n              </div>\n            </div>\n          </div>\n          <div className=\"debate-result-resultPage-displayResults--container\">\n            This is Results View Container\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default DebatesResults;\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/NewsResults--component.jsx",["132"],"import React, { useEffect } from \"react\";\nimport { CUSTOMER, addHiglightToTab } from \"../../../constants/index\";\n\nfunction NewsResults() {\n  const tabType = \"news\";\n  useEffect(() => {\n    addHiglightToTab(tabType);\n\n    return function cleanup() {\n      //removeHiglightToTab();\n      addHiglightToTab(tabType);\n    };\n  }, []);\n  return (\n    <div>\n      <h3>News Results</h3>\n    </div>\n  );\n}\n\nexport default NewsResults;\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/utils/InputElement.jsx",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/context/Debates/debateContext.js",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/context/Debates/DebateState.js",["133","134"],"import React, { useReducer } from \"react\";\n\nimport axios from \"axios\";\nimport DebateContext from \"./debateContext\";\nimport debateReducer from \"./debateReducer\";\n\nimport {\n  ADD_SEARCH_LOCAL_STATE,\n  REMOVE_SEARCH_LOCAL_STATE,\n  ADD_LOADING_LOCAL_STATE,\n  REMOVE_LOADING_LOCAL_STATE,\n  SEARCH_REQUEST_SUCCESS,\n  SEARCH_REQUEST_ERROR,\n  REMOVE_SEARCH_REQUEST,\n  ADD_SEARCH_QUERY_LOCAL_STATE,\n  REMOVE_SEARCH_QUERY_LOCAL_STATE,\n  ERROR_REMOVE_SEARCH_QUERY_LOCAL_STATE,\n  REMOVE_SEARCH_REQUEST_ERROR,\n} from \"../types\";\n\n// Import the constants\nimport {\n  searchQueryConst,\n  urlHeaders,\n  CUSTOMER,\n  searchConstQueryObject,\n  returnObjQuery,\n  arrayToString,\n} from \"../../constants/index\";\n\nconst DebateState = (props) => {\n  const initialState = {\n    searchquery: \"\",\n    loading: false,\n    debatesearchResult: {},\n    currentDebateSection: {},\n    debateQueryObj: searchConstQueryObject,\n\n    errors: {},\n  };\n\n  const [state, dispatch] = useReducer(debateReducer, initialState);\n\n  // Set Global Constants\n  let requestHeaders =\n    CUSTOMER === \"KLA\"\n      ? urlHeaders.requestHeadersKLA\n      : urlHeaders.requestHeadersKLC;\n\n  //   All Your Actions will go down\n\n  // Add Loading to Global State\n  const addLoading = () => {\n    dispatch({\n      type: ADD_LOADING_LOCAL_STATE,\n    });\n  };\n\n  // Add Loading to Global State\n  const removeLoading = () => {\n    dispatch({\n      type: REMOVE_LOADING_LOCAL_STATE,\n    });\n  };\n\n  // Add Error\n  const addError = (errObject) => {\n    dispatch({\n      type: SEARCH_REQUEST_ERROR,\n      payload: errObject,\n    });\n  };\n\n  // Remove Error\n  const removeError = () => {\n    dispatch({\n      type: REMOVE_SEARCH_REQUEST_ERROR,\n    });\n  };\n\n  // Add Search Query to Local State\n  const addSearchQuery = (searchTerm, queryObj) => {\n    queryObj[\"qp\"] = searchTerm;\n    dispatch({\n      type: ADD_SEARCH_LOCAL_STATE,\n      payload: searchTerm,\n    });\n\n    dispatch({\n      type: ADD_SEARCH_QUERY_LOCAL_STATE,\n      payload: queryObj,\n    });\n\n    // addLoading();\n    return queryObj;\n  };\n\n  // Add Search Query to Local State\n  const removeSearchQuery = () => {\n    dispatch({\n      type: REMOVE_SEARCH_LOCAL_STATE,\n      payload: \"\",\n    });\n  };\n\n  // Remove Search Results from the local state\n\n  const removeSearchQueryResults = () => {\n    dispatch({\n      type: REMOVE_SEARCH_REQUEST,\n    });\n  };\n\n  // Request the server for Search Results\n  const searchRequestBackendProm = (reqObj) => {\n    return new Promise(async function (resolve, reject) {\n      // https://stackoverflow.com/questions/49944387/how-to-correctly-use-axios-params-with-arrays\n\n      console.info(\n        `[DEBUG] from promise function The value of search Template ${JSON.stringify(\n          reqObj,\n          null,\n          2\n        )}`\n      );\n\n      try {\n        const response = await axios.get(\n          \"/api/sd/sh\",\n\n          {\n            params: reqObj,\n          }\n        );\n\n        dispatch({ type: SEARCH_REQUEST_SUCCESS, payload: response.data });\n        resolve(response.data);\n      } catch (error) {\n        dispatch({\n          type: SEARCH_REQUEST_ERROR,\n          payload: error.response.data,\n        });\n        console.info(\n          `[DEBUG] ERROR The Search Request Header is \\n ${JSON.stringify(\n            error.response.data\n          )}`\n        );\n        reject(error.response.data);\n      }\n    });\n  };\n  // Request the server for Search Results\n  const searchRequestExplorerProm = (reqObj) => {\n    return new Promise(async function (resolve, reject) {\n      let urlObj = arrayToString(reqObj);\n      // console.info(\n      //   `[DEBUG][DEBATE-STATE] from promise function Explorer Search The value of search Template ${JSON.stringify(\n      //     urlObj,\n      //     null,\n      //     2\n      //   )}`\n      // );\n\n      try {\n        const response = await axios.get(\n          \"/api/sd/sh\",\n\n          {\n            params: urlObj,\n          }\n        );\n        // console.info(\n        //   `[DEBUG] The Search Request Header is \\n ${JSON.stringify(\n        //     response.data,\n        //     null,\n        //     2\n        //   )}`\n        // );\n        dispatch({ type: SEARCH_REQUEST_SUCCESS, payload: response.data });\n        resolve(response.data);\n      } catch (error) {\n        dispatch({\n          type: SEARCH_REQUEST_ERROR,\n          payload: error.response.data,\n        });\n        console.info(\n          `[DEBUG] ERROR The Search Request Header is \\n ${JSON.stringify(\n            error.response.data\n          )}`\n        );\n        reject(error.response.data);\n      }\n    });\n  };\n\n  // Manipulate the query state\n\n  const manipulateQuery = (event, lang, arrayObject, queryObj) => {\n    let queryToDispatch = returnObjQuery(event, lang, arrayObject, queryObj);\n    // console.info(\n    //   `[DEBUG] from Debate State Manipulate Query the query is \\n ${JSON.stringify(\n    //     queryToDispatch\n    //   )}`\n    // );\n    // Adding query to the local state\n    addSearchQueryFormat(queryToDispatch);\n    // [TODO] Whether to keep the request in state or client\n    // searchRequestExplorerProm(state.debateQueryObj).then().catch();\n    // console.info(\n    //   `[DEBUG] The manipulateQuery is called from \\n ${JSON.stringify(\n    //     state.debateQueryObj\n    //   )} `\n    // );\n\n    return queryToDispatch;\n  };\n\n  // Request The server for Search Results\n\n  const searchRequestBackend = async (reqPrams) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let searchTemplate = searchQueryConst;\n\n    searchTemplate.qp = reqPrams;\n\n    // console.info(\n    //   `[DEBUG] The value of search Template ${JSON.stringify(\n    //     searchTemplate,\n    //     null,\n    //     2\n    //   )}`\n    // );\n\n    try {\n      const response = await axios.get(\n        \"/api/sd/sh\",\n\n        {\n          params: searchTemplate,\n        }\n      );\n      // console.info(\n      //   `[DEBUG] The Search Request Header is \\n ${JSON.stringify(\n      //     response.data,\n      //     null,\n      //     2\n      //   )}`\n      // );\n      dispatch({ type: SEARCH_REQUEST_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: SEARCH_REQUEST_ERROR,\n        payload: error.response.data,\n      });\n      console.info(\n        `[DEBUG] ERROR The Search Request Header is \\n ${error.response.data}`\n      );\n      return error;\n    }\n  };\n\n  // Actions Search Query\n\n  const addSearchQueryFormat = (queryload) => {\n    console.log(\n      `[DEBUG][ADD SEARCH QUERY] called with query load ${JSON.stringify(\n        queryload\n      )}`\n    );\n    dispatch({\n      type: ADD_SEARCH_QUERY_LOCAL_STATE,\n      payload: queryload,\n    });\n  };\n\n  const removeSearchQueryFormat = (queryload) => {\n    dispatch({\n      type: REMOVE_SEARCH_QUERY_LOCAL_STATE,\n      payload: queryload,\n    });\n  };\n\n  const errorSearchQueryFormat = (errorload) => {\n    dispatch({\n      type: ERROR_REMOVE_SEARCH_QUERY_LOCAL_STATE,\n      payload: errorload,\n    });\n  };\n\n  return (\n    <DebateContext.Provider\n      value={{\n        searchquery: state.searchquery,\n        loading: state.loading,\n        debatesearchResult: state.debatesearchResult,\n        newssearchResult: state.newssearchResult,\n        currentDebateSection: state.currentDebateSection,\n        debateQueryObj: state.debateQueryObj,\n\n        addSearchQuery,\n        removeSearchQuery,\n        addLoading,\n        removeLoading,\n        searchRequestBackend,\n        searchRequestBackendProm,\n        removeSearchQueryResults,\n        addSearchQueryFormat,\n        removeSearchQueryFormat,\n        errorSearchQueryFormat,\n        manipulateQuery,\n        searchRequestExplorerProm,\n        addError,\n        removeError,\n\n        errors: {},\n      }}\n    >\n      {props.children}\n    </DebateContext.Provider>\n  );\n};\n\nexport default DebateState;\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/context/Debates/debateReducer.js",["135"],"import {\n  ADD_SEARCH_LOCAL_STATE,\n  REMOVE_SEARCH_LOCAL_STATE,\n  ADD_LOADING_LOCAL_STATE,\n  REMOVE_LOADING_LOCAL_STATE,\n  SEARCH_REQUEST_SUCCESS,\n  SEARCH_REQUEST_ERROR,\n  REMOVE_SEARCH_REQUEST,\n  REMOVE_SEARCH_REQUEST_ERROR,\n  ADD_SEARCH_QUERY_LOCAL_STATE,\n  REMOVE_SEARCH_QUERY_LOCAL_STATE,\n  ERROR_REMOVE_SEARCH_QUERY_LOCAL_STATE,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_SEARCH_LOCAL_STATE:\n      return {\n        ...state,\n        searchquery: action.payload,\n      };\n\n    case REMOVE_SEARCH_LOCAL_STATE:\n      return {\n        ...state,\n        searchquery: \"\",\n      };\n\n    case ADD_LOADING_LOCAL_STATE:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case REMOVE_LOADING_LOCAL_STATE:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case SEARCH_REQUEST_SUCCESS:\n      return {\n        ...state,\n        debatesearchResult: action.payload,\n      };\n\n    case REMOVE_SEARCH_REQUEST:\n      return {\n        ...state,\n        debatesearchResult: {},\n      };\n\n    case SEARCH_REQUEST_ERROR:\n      return {\n        ...state,\n        errors: action.payload,\n      };\n\n    case REMOVE_SEARCH_REQUEST_ERROR:\n      return {\n        ...state,\n        errors: {},\n      };\n\n    case ADD_SEARCH_QUERY_LOCAL_STATE:\n      return {\n        ...state,\n        debateQueryObj: action.payload,\n      };\n\n    case REMOVE_SEARCH_QUERY_LOCAL_STATE:\n      return {\n        ...state,\n        debateQueryObj: {},\n      };\n\n    case ERROR_REMOVE_SEARCH_QUERY_LOCAL_STATE:\n      return {\n        ...state,\n        errors: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/context/types.js",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/NotFound-component.jsx",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/utils/Loading.jsx",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/NotFound--component.jsx",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/debateUtils/Collapsible--component.jsx",["136","137","138","139","140","141","142"],"import React, { useEffect, useState } from \"react\";\nimport { CUSTOMER, i18n } from \"../../../../constants/index\";\nimport FacetItem from \"./FacetItem--component\";\n\nfunction Collapsible({ header, lang, type, dataFacetEng, dataFacetKan }) {\n  const [inputSearch, setInput] = useState(\"\");\n  const [facetValue, setFacetValue] = useState([]);\n\n  useEffect(() => {\n    // console.info(`[DEBUG] the use Effect Called for ${type} `);\n    dontrenderFacet(type);\n    addEventListenerCard();\n    var facetData = lang === \"ENG\" ? dataFacetEng : dataFacetKan;\n\n    setFacetValue(facetData);\n  }, []);\n\n  function handleSearch(e) {\n    if (type === \"debateType\") {\n      let dataFacet = lang === \"ENG\" ? dataFacetEng : dataFacetEng;\n      // console.info(\n      //   `In use Effect the value of dataFacet ${JSON.stringify(dataFacet)}`\n      // );\n      let filteredValue = dataFacet.filter((item) => {\n        return item.key.includes(e.target.value);\n      });\n      // console.info(\n      //   `In use Effect the value of filtered value fr debateType ${JSON.stringify(\n      //     filteredValue\n      //   )}`\n      // );\n      setFacetValue(filteredValue);\n    } else {\n      renderSearchFacet(e);\n    }\n  }\n\n  function renderSearchFacet(e) {\n    let dataFacet = lang === \"ENG\" ? dataFacetEng : dataFacetKan;\n    // console.info(`In use Effect the value of dataFacet ${dataFacet}`);\n    let filteredValue = dataFacet.filter((item) => {\n      return item.key.includes(e.target.value);\n    });\n\n    // console.info(\n    //   `In use Effect the value of filtered value fr debateType ${JSON.stringify(\n    //     filteredValue\n    //   )}`\n    // );\n    setFacetValue(filteredValue);\n  }\n\n  const itemCheckFunc = (e, type) => {\n    // This function will carry the checked from the facet item to the global state\n    // console.info(`Item Check Function is called !!!`);\n    // console.info(\n    //   `The item ${e.target.value} is called ${e.target.checked} for ${type}`\n    // );\n  };\n\n  function dontrenderFacet(type) {\n    // console.log(\n    //   `[DEBUG] Don Render The data facet length of ${type} is ${JSON.stringify(\n    //     dataFacetEng\n    //   )}`\n    // );\n    if (type === \"debatePart\") {\n      return;\n    } else {\n      if (\n        dataFacetEng.length === 0 ||\n        dataFacetKan.length === 0 ||\n        dataFacetEng[0].key === \"N/A\"\n      ) {\n        const facetContainer = document.getElementById(type + \"_container\");\n        facetContainer.style.display = \"none\";\n      } else {\n        const facetContainer = document.getElementById(type + \"_container\");\n        facetContainer.style.display = \"block\";\n      }\n    }\n  }\n\n  // console.info(\n  //   `[DEBUG] The value of the filetered value is \\n ${JSON.stringify(\n  //     facetValue\n  //   )}`\n  // );\n  function onChange(e) {\n    setInput(e.target.value);\n  }\n\n  function renderDebateType(debateFacet, ItemJsx, lang, type, itemCheckFunc) {\n    function renderDebateHeader(headerType, lang) {\n      if (lang === \"ENG\") {\n        let headerEng =\n          headerType === \"part1\"\n            ? \"Question & Answers (Part1)\"\n            : \"Other than Question & Answers (Part2)\";\n        return headerEng;\n      } else {\n        let headerKan =\n          headerType === \"part1\"\n            ? \"ಭಾಗ-1: ಪ್ರಶ್ನೋತ್ತರ\"\n            : \"ಭಾಗ-2: ಪ್ರಶ್ನೋತ್ತರವನ್ನು ಹೊರತುಪಡಿಸಿ ಇತರೆ ವಿಷಯಗಳ ಮೇಲೆ ಚರ್ಚೆ\";\n        return headerKan;\n      }\n    }\n\n    return facetValue.map((item) => {\n      // console.info(`[DEBUG] from ${type} the item is ${item}`);\n      const { key, doc_count } = item;\n      // console.info(`The itemCheck function for ${type} is ${itemCheckFunc}`);\n\n      if (doc_count === \"0\") {\n        return;\n      }\n      return (\n        <ItemJsx\n          language={lang}\n          itemHeader={renderDebateHeader(key, lang)}\n          docCount={doc_count}\n          facetType={type}\n          value={key}\n          itemCheckFunction={itemCheckFunc}\n        />\n      );\n    });\n  }\n\n  function renderOtherType(\n    debateFacetEng,\n    debateFacetKan,\n    ItemJsx,\n    lang,\n    type,\n    itemCheckFunc\n  ) {\n    // console.info(\n    //   `[DEBUG] The value of the other debate facet is \\n ${JSON.stringify(\n    //     debateFacet\n    //   )}`\n    // );\n\n    let debateFacet = lang === \"ENG\" ? debateFacetEng : debateFacetKan;\n    return facetValue.map((item) => {\n      const { key, doc_count } = item;\n      // console.info(`from Collapse componenet ${type}`);\n      if (doc_count === 0 || key === \"N/A\") {\n        return;\n      }\n      return (\n        <ItemJsx\n          itemHeader={key}\n          facetType={type}\n          docCount={doc_count}\n          value={key}\n          itemCheckFunction={itemCheckFunc}\n          language={lang}\n        />\n      );\n    });\n  }\n\n  function addEventListenerCard() {\n    // var coll = document.getElementsByClassName(\n    //   CUSTOMER === \"KLA\" ? \"collapsible--kla\" : \"collapsible--klc\"\n    // );\n    var coll = document.getElementById(type + \"_button\");\n    // console.info(`[DEBUG] The value of coll is ${coll} `);\n    // for (let i = 0; i < coll.length; i++) {\n    // coll.classList.toggle(\"active\");\n    coll.addEventListener(\"click\", function () {\n      // console.error(`The click function is called !!!`);\n      this.classList.toggle(\"active\");\n      // console.info(`The value of type is ${type} `);\n      const content = document.getElementById(type);\n\n      if (content.style.display === \"block\") {\n        content.style.display = \"none\";\n      } else if (content.style.display === \"none\") {\n        content.style.display = \"block\";\n      } else {\n        content.style.display = \"block\";\n      }\n      // console.info(\"The value of content is \", content.style.visibility);\n    });\n    // }\n  }\n\n  return (\n    <div id={type + \"_container\"} className=\"collapsibleContainer\">\n      <button\n        id={type + \"_button\"}\n        type=\"button\"\n        className={CUSTOMER === \"KLA\" ? \"collapsible--kla\" : \"collapsible--klc\"}\n      >\n        {lang === \"ENG\" ? header.eng : header.kan}\n      </button>\n      <div id={type} className=\"content\">\n        <form\n          action=\"\"\n          style={{\n            padding: \"0.5rem 1rem\",\n          }}\n        >\n          <input\n            className=\"collapsibleInput\"\n            type=\"text\"\n            onChange={(e) => handleSearch(e)}\n          />\n        </form>\n        <div className=\"facetContainer\">\n          {type === \"debateType\"\n            ? renderDebateType(\n                dataFacetEng,\n                FacetItem,\n                lang,\n                type,\n                itemCheckFunc\n              )\n            : renderOtherType(\n                dataFacetEng,\n                dataFacetKan,\n                FacetItem,\n                lang,\n                type,\n                itemCheckFunc\n              )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Collapsible;\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/debateUtils/FacetItem--component.jsx",["143"],"import React, { useContext, useState, useEffect } from \"react\";\nimport DebateContext from \"../../../../context/Debates/debateContext\";\nimport { returnQueryVariableFilter } from \"../../../../constants\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nfunction FacetItem({\n  itemHeader,\n  docCount,\n  value,\n  facetType,\n  language,\n\n  itemCheckFunction,\n}) {\n  // Called the Context Api\n\n  const debateContext = useContext(DebateContext);\n  const [checked, setChecked] = useState(false);\n\n  // https://stackoverflow.com/questions/32174317/how-to-set-default-checked-in-checkbox-reactjs\n\n  const {\n    debateQueryObj,\n\n    manipulateQuery,\n    searchRequestExplorerProm,\n    addLoading,\n    removeLoading,\n    addError,\n  } = debateContext;\n\n  useState(() => {\n    isChecked(debateQueryObj, language, facetType);\n  }, []);\n\n  function itemCheck(e, type, lang) {\n    const itemCheckArray = returnQueryVariableFilter(type);\n    setChecked(!checked);\n    // Add Loading\n    addLoading();\n    const queryObject = manipulateQuery(\n      e,\n      lang,\n      itemCheckArray,\n      debateQueryObj\n    );\n    searchRequestExplorerProm(queryObject)\n      .then((res) => {\n        removeLoading();\n      })\n      .catch((err) => {\n        addError(err);\n        removeLoading();\n        toast.error(\n          \"Connection to the Server Failed !!! Please Contact System Administrator\"\n        );\n      });\n  }\n\n  function isChecked(stateglobal, lang, type) {\n    // This function is to check whether the user has clicked the item\n\n    const itemCheckArray = returnQueryVariableFilter(type);\n\n    if (itemCheckArray[1] === \"string\") {\n      if (stateglobal[itemCheckArray[0]] === value) {\n        setChecked(true);\n      }\n    } else {\n      if (itemCheckArray[1] === \"array\" && itemCheckArray.length === 2) {\n        // console.info(\n        //   `[DEBUG] from Facet Chips state global ${stateglobal} && ${itemCheckArray[0]} && value ${value} `\n        // );\n        if (stateglobal[itemCheckArray[0]].includes(value)) {\n          setChecked(true);\n        }\n      } else {\n        const setBool =\n          lang === \"ENG\"\n            ? stateglobal[itemCheckArray[0]].includes(value)\n            : stateglobal[itemCheckArray[2]].includes(value);\n\n        if (setBool) {\n          setChecked(true);\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"facetItem\">\n      <label>\n        <input\n          onChange={(e) => itemCheck(e, facetType, language)}\n          defaultChecked={checked}\n          type=\"checkbox\"\n          value={value}\n          autocomplete=\"off\"\n        />\n        <span>{`${itemHeader} (${docCount})`}</span>\n      </label>\n    </div>\n  );\n}\n\nexport default FacetItem;\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/debateUtils/FacetChips--component.jsx",["144"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { CUSTOMER } from \"../../../../constants\";\n\nfunction FacetChips({ facetType, valueName, removeFacet, lang }) {\n  // https://codepen.io/hansmaad/pen/QGYpey/?html-preprocessor=markdown\n  const [valueFacet, setValueName] = useState(\"\");\n  const [valueFacetType, setFacetType] = useState(\"\");\n  useEffect(() => {\n    setFacetType(facetType);\n    setValueName(valueName);\n  }, []);\n\n  function removeFacetChip() {\n    removeFacet(valueFacet, valueFacetType);\n    setValueName(\"\");\n    setFacetType(\"\");\n  }\n  function debateTypeExt(value, language) {\n    if (value === \"part1\") {\n      return language === \"ENG\"\n        ? \"Question & Answers [Part1]\"\n        : \"ಭಾಗ-1: ಪ್ರಶ್ನೋತ್ತರ\";\n    } else if (value === \"part2\") {\n      return language === \"ENG\"\n        ? \"Other than Q & A [Part2]\"\n        : \"ಭಾಗ-2: ಪ್ರಶ್ನೋತ್ತರವನ್ನು ಹೊರತುಪಡಿಸಿ ಇತರೆ ವಿಷಯಗಳ ಮೇಲೆ ಚರ್ಚೆ\";\n    } else {\n      return value;\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className={CUSTOMER === \"KLA\" ? \"md-chip--kla\" : \"md-chip--klc\"}>\n        <span>\n          {facetType} : {debateTypeExt(valueName, lang)}\n        </span>\n        <button\n          type=\"button\"\n          className={\n            CUSTOMER === \"KLA\" ? \"md-chip-remove--KLA\" : \"md-chip-remove--KLC\"\n          }\n          onClick={(e) => removeFacetChip()}\n        ></button>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default FacetChips;\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebateResults/FacetFilterContainer.jsx",["145","146"],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebateResults/FacetLoading--component.jsx",["147"],"import React, { Fragment, useEffect } from \"react\";\nimport { CUSTOMER } from \"../../../../constants/index\";\n\nfunction FacetLoading({ lang }) {\n  useEffect(() => {}, []);\n\n  function changeColumnColor(customer) {\n    let colour =\n      customer === \"KLA\"\n        ? \"rgba(11, 212, 21, 0.979) transparent transparent transparent\"\n        : \"rgba(219, 61, 9, 0.979) transparent transparent transparent\";\n    let nodes = document.getElementsByClassName(\"lds-ring\");\n    let nodes1 = nodes.getElementsByTagName(\"div\");\n\n    for (var i = 0; i < nodes1.length; i++) {\n      nodes[i].style.borderColor = colour;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"facet--loading\">\n        <div className={CUSTOMER === \"KLA\" ? \"lds-ring--kla\" : \"lds-ring--klc\"}>\n          <div />\n          <div />\n          <div />\n          <div />\n        </div>\n\n        <div className=\"facet--loading-text\">\n          {lang === \"ENG\" ? \"Loading ...\" : \"ಲೋಡ್ ಆಗುತ್ತಿದೆ ...\"}{\" \"}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default FacetLoading;\n","/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebateResults/SearchInfo--component.jsx",[],"/home/vaibhav/Documents/VidhanDocsTracker/explorer/client/src/components/Explorer/tabs/DebateResults/Calender-Debate--component.jsx",["148","149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":12,"column":3,"nodeType":"156","messageId":"157","endLine":12,"endColumn":12},{"ruleId":"154","severity":1,"message":"158","line":43,"column":5,"nodeType":"156","messageId":"157","endLine":43,"endColumn":16},{"ruleId":"154","severity":1,"message":"159","line":47,"column":5,"nodeType":"156","messageId":"157","endLine":47,"endColumn":29},{"ruleId":"160","severity":1,"message":"161","line":90,"column":6,"nodeType":"162","endLine":90,"endColumn":8,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"164","line":101,"column":12,"nodeType":"156","messageId":"157","endLine":101,"endColumn":30},{"ruleId":"154","severity":1,"message":"165","line":136,"column":12,"nodeType":"156","messageId":"157","endLine":136,"endColumn":29},{"ruleId":"154","severity":1,"message":"166","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"167","line":24,"column":8,"nodeType":"156","messageId":"157","endLine":24,"endColumn":20},{"ruleId":"154","severity":1,"message":"168","line":40,"column":5,"nodeType":"156","messageId":"157","endLine":40,"endColumn":16},{"ruleId":"154","severity":1,"message":"169","line":41,"column":5,"nodeType":"156","messageId":"157","endLine":41,"endColumn":23},{"ruleId":"154","severity":1,"message":"170","line":42,"column":5,"nodeType":"156","messageId":"157","endLine":42,"endColumn":25},{"ruleId":"154","severity":1,"message":"171","line":45,"column":5,"nodeType":"156","messageId":"157","endLine":45,"endColumn":28},{"ruleId":"160","severity":1,"message":"172","line":63,"column":6,"nodeType":"162","endLine":63,"endColumn":8,"suggestions":"173"},{"ruleId":"154","severity":1,"message":"174","line":87,"column":12,"nodeType":"156","messageId":"157","endLine":87,"endColumn":25},{"ruleId":"154","severity":1,"message":"175","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"177","line":96,"column":3,"nodeType":"178","messageId":"179","endLine":96,"endColumn":9},{"ruleId":"154","severity":1,"message":"180","line":363,"column":7,"nodeType":"156","messageId":"157","endLine":363,"endColumn":21},{"ruleId":"154","severity":1,"message":"181","line":7,"column":3,"nodeType":"156","messageId":"157","endLine":7,"endColumn":11},{"ruleId":"154","severity":1,"message":"182","line":19,"column":10,"nodeType":"156","messageId":"157","endLine":19,"endColumn":21},{"ruleId":"154","severity":1,"message":"183","line":19,"column":23,"nodeType":"156","messageId":"157","endLine":19,"endColumn":32},{"ruleId":"154","severity":1,"message":"181","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":18},{"ruleId":"154","severity":1,"message":"184","line":45,"column":7,"nodeType":"156","messageId":"157","endLine":45,"endColumn":21},{"ruleId":"154","severity":1,"message":"185","line":221,"column":11,"nodeType":"156","messageId":"157","endLine":221,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":15,"column":1,"nodeType":"188","endLine":85,"endColumn":3},{"ruleId":"154","severity":1,"message":"189","line":2,"column":20,"nodeType":"156","messageId":"157","endLine":2,"endColumn":24},{"ruleId":"154","severity":1,"message":"190","line":6,"column":10,"nodeType":"156","messageId":"157","endLine":6,"endColumn":21},{"ruleId":"160","severity":1,"message":"191","line":16,"column":6,"nodeType":"162","endLine":16,"endColumn":8,"suggestions":"192"},{"ruleId":"154","severity":1,"message":"193","line":89,"column":12,"nodeType":"156","messageId":"157","endLine":89,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":116,"column":9,"nodeType":"196","messageId":"197","endLine":116,"endColumn":16},{"ruleId":"154","severity":1,"message":"198","line":145,"column":9,"nodeType":"156","messageId":"157","endLine":145,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":150,"column":9,"nodeType":"196","messageId":"197","endLine":150,"endColumn":16},{"ruleId":"154","severity":1,"message":"199","line":1,"column":39,"nodeType":"156","messageId":"157","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"200","line":11,"column":6,"nodeType":"162","endLine":11,"endColumn":8,"suggestions":"201"},{"ruleId":"154","severity":1,"message":"181","line":7,"column":3,"nodeType":"156","messageId":"157","endLine":7,"endColumn":11},{"ruleId":"194","severity":1,"message":"195","line":91,"column":40,"nodeType":"202","messageId":"203","endLine":91,"endColumn":42},{"ruleId":"154","severity":1,"message":"204","line":7,"column":12,"nodeType":"156","messageId":"157","endLine":7,"endColumn":29},{"ruleId":"154","severity":1,"message":"205","line":24,"column":5,"nodeType":"156","messageId":"157","endLine":24,"endColumn":20},{"ruleId":"160","severity":1,"message":"206","line":37,"column":6,"nodeType":"162","endLine":37,"endColumn":19,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'searchquery' is assigned a value but never used.","'searchRequestBackendProm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addSearchQueryFormat', 'debateQueryObj', 'pushToWelcome', 'removeSearchQuery', 'removeSearchQueryResults', and 'searchTerm'. Either include them or remove the dependency array.","ArrayExpression",["210"],"'keyBoardEnterPress' is defined but never used.","'changeSearchState' is defined but never used.","'Link' is defined but never used.","'InputElement' is defined but never used.","'searchQuery' is assigned a value but never used.","'debatesearchResult' is assigned a value but never used.","'searchRequestBackend' is assigned a value but never used.","'removeSearchQueryFormat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addSearchQueryFormat' and 'removeSearchQuery'. Either include them or remove the dependency array.",["211"],"'onChangeQuery' is defined but never used.","'axios' is defined but never used.","no-dupe-keys","Duplicate key 'bookId'.","ObjectExpression","unexpected","'queryParameter' is assigned a value but never used.","'CUSTOMER' is defined but never used.","'searchState' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'requestHeaders' is assigned a value but never used.","'config' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'i18n' is defined but never used.","'inputSearch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addEventListenerCard', 'dataFacetEng', 'dataFacetKan', 'dontrenderFacet', 'lang', and 'type'. Either include them or remove the dependency array.",["212"],"'onChange' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'debateFacet' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'facetType' and 'valueName'. Either include them or remove the dependency array. If 'setFacetType' needs the current value of 'facetType', you can also switch to useReducer instead of useState and read 'facetType' in the reducer.",["213"],"ArrowFunctionExpression","expectedInside","'changeColumnColor' is defined but never used.","'manipulateQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'displayDateBox'. Either include it or remove the dependency array.",["214"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [addSearchQueryFormat, debateQueryObj, pushToWelcome, removeSearchQuery, removeSearchQueryResults, searchTerm]",{"range":"225","text":"226"},"Update the dependencies array to be: [addSearchQueryFormat, removeSearchQuery]",{"range":"227","text":"228"},"Update the dependencies array to be: [addEventListenerCard, dataFacetEng, dataFacetKan, dontrenderFacet, lang, type]",{"range":"229","text":"230"},"Update the dependencies array to be: [facetType, valueName]",{"range":"231","text":"232"},"Update the dependencies array to be: [displayDate, displayDateBox]",{"range":"233","text":"234"},[2283,2285],"[addSearchQueryFormat, debateQueryObj, pushToWelcome, removeSearchQuery, removeSearchQueryResults, searchTerm]",[1610,1612],"[addSearchQueryFormat, removeSearchQuery]",[583,585],"[addEventListenerCard, dataFacetEng, dataFacetKan, dontrenderFacet, lang, type]",[441,443],"[facetType, valueName]",[1017,1030],"[displayDate, displayDateBox]"]